enable=scriptverify
version

# A simple script to demonstrate multiple copy operations.

# The slices option creates multiple threads to the same device/file.

$COPY_OPTIONS="bs=256k slices=10 enable=image onerr=abort"
$DATA_LIMIT=${DATA_LIMIT:-limit=1g}

# First cluster source/destination devices.
$DISK_SRC=${DISK_SRC:?'Please set source device!'}
$DISK_DST=${DISK_DST:?'Please set destination device!'}

# Populate the source disk to be copied.

of=${DISK_SRC} bs=32k pattern=iot disable=pstats ${COPY_OPTIONS} tag=disk_init &
of=${DISK_DST} bs=32k pattern=0 disable=pstats ${COPY_OPTIONS} tag=disk_init &
wait tag=disk_init

# Copy from the source to the destination LUNs, verifying data.
# Note: Without a data limit, the entire file is copied.

src=${DISK_SRC} dst=${DISK_DST} ${COPY_OPTIONS} ${DATA_LIMIT} tag=disk_copy &

# Give threads a short time to get started.
msleep=1

# Show active jobs:
jobs

# Query thread status:
query

# Wait for both disk copies to complete.

wait tag=disk_copy

# ------------------------------------------------------------------------------------
# Same copy operation as above, except to files.

$FILE_SRC=${FILE_SRC:-/var/tmp/src_test_file.data}
$FILE_DST=${FILE_DST:-/var/tmp/dst_test_file.data}

$COPY_OPTIONS="bs=32k slices=10 onerr=abort"

# Populate the source file to be copied. (in the foreground)

of=${FILE_SRC} bs=32k dispose=keep disable=pstats ${COPY_OPTIONS} ${DATA_LIMIT}

# Copy and verify the source file to the destination file.

src=${FILE_SRC} dst=${FILE_DST} ${COPY_OPTIONS} flags=direct tag=file_copy &

# Wait for this file copy to complete.
wait tag=file_copy

# Remove test files so we don't overfill the disk!
system rm ${FILE_SRC} ${FILE_DST}
